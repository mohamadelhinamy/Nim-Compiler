IMPORT  import
IDENTIFIER  re
COMMA  ,
IDENTIFIER  macros
MACRO  macro
IDENTIFIER  multiMatch
OPEN_PAREN  (
IDENTIFIER  inp
COLON  :
IDENTIFIER  string
SEMI_COLON  ;
IDENTIFIER  sections
COLON  :
IDENTIFIER  untyped
CLOSE_PAREN  )
COLON  :
IDENTIFIER  untyped
EQUALS_OPERATOR  =
TEMPLATE  template
IDENTIFIER  branch
OPEN_PAREN  (
IDENTIFIER  inp
COMMA  ,
IDENTIFIER  p
COMMA  ,
IDENTIFIER  action
CLOSE_PAREN  )
EQUALS_OPERATOR  =
INDENT      
VARIABLE  var
IDENTIFIER  mmlen
EQUALS_OPERATOR  =
IDENTIFIER  matchLen
OPEN_PAREN  (
IDENTIFIER  inp
COMMA  ,
IDENTIFIER  mmpatterns
OPEN_BRACK  [
IDENTIFIER  p
CLOSE_BRACK  ]
COMMA  ,
IDENTIFIER  matches
COMMA  ,
IDENTIFIER  mmpos
CLOSE_PAREN  )
INDENT      
IF  if
IDENTIFIER  mmlen
GREATER_THAN  >
DIGIT  0
COLON  :
IDENTIFIER  action
IDENTIFIER  inc
OPEN_PAREN  (
IDENTIFIER  mmpos
COMMA  ,
IDENTIFIER  mmlen
CLOSE_PAREN  )
BREAK  break
IDENTIFIER  searchSubs
TEMPLATE  template
IDENTIFIER  searchLoop
OPEN_PAREN  (
IDENTIFIER  inp
COMMA  ,
IDENTIFIER  actions
CLOSE_PAREN  )
OPEN_BRACE  {
DOT  .
IDENTIFIER  dirty
CLOSE_BRACE  }
EQUALS_OPERATOR  =
INDENT      
VARIABLE  var
IDENTIFIER  mmpos
EQUALS_OPERATOR  =
DIGIT  0
INDENT      
WHILE  while
IDENTIFIER  mmpos
LESS_THAN  <
IDENTIFIER  inp
DOT  .
IDENTIFIER  len
COLON  :
BLOCK  block
IDENTIFIER  searchSubs
COLON  :
INDENT          
IDENTIFIER  actions
INDENT          
IDENTIFIER  inc
OPEN_PAREN  (
IDENTIFIER  mmpos
CLOSE_PAREN  )
